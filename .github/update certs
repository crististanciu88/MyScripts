```powershell
param (
    [string]$pfxCertificatePath,       # Path to the PFX certificate on the remote server
    [string]$technicalAccount           # Subject name to look for in the certificate store
)

# Define your array of servers (update with your server names/addresses)
$servers = @("Server1", "Server2", "Server3")

# Import the PFX Certificate
$pfxPassword = Read-Host "Enter PFX Password" -AsSecureString
$pfxCertificate = New-Object System.Security.Cryptography.X509Certificates.X509Certificate2
$pfxCertificate.Import($pfxCertificatePath, $pfxPassword, 'Exportable')

foreach ($server in $servers) {
    # Use Invoke-Command to run the actions on the remote server
    Invoke-Command -ComputerName $server -ScriptBlock {
        param (
            $pfxCertificate,
            $technicalAccount
        )

        # Open the LocalMachine\Root store
        $store = New-Object System.Security.Cryptography.X509Certificates.X509Store("Root", "LocalMachine")
        $store.Open([System.Security.Cryptography.X509Certificates.OpenFlags]::ReadWrite)

        # Check for existing certificate with the specified subject
        $existingCertificate = $store.Certificates | Where-Object { $_.Subject -eq "CN=$technicalAccount" }

        if ($existingCertificate) {
            # Compare the existing certificate and new certificate 'NotAfter' dates
            if ($existingCertificate.NotAfter -lt $pfxCertificate.NotAfter) {
                # Existing certificate expires first, update it
                $store.Remove($existingCertificate)
                $store.Add($pfxCertificate)
                Write-Host "Updated certificate for $technicalAccount on $env:COMPUTERNAME"
            } else {
                # Existing certificate is still valid longer, no change needed
                Write-Host "No update needed for $technicalAccount on $env:COMPUTERNAME. Existing certificate is still valid longer."
            }
        } else {
            # No existing certificate found, do not add the new certificate
            Write-Host "No existing certificate found for $technicalAccount on $env:COMPUTERNAME. No action taken."
        }

        # Close the certificate store
        $store.Close()
    } -ArgumentList $pfxCertificate, $technicalAccount
}

<?xml version="1.0" encoding="utf-8"?>
<servers>
  <environment name="DEV_UAT">
    <server>devserver1</server>
    <server>devserver2</server>
  </environment>
  <environment name="PROD_BCP">
    <server>prodserver1</server>
    <server>prodserver2</server>
  </environment>
</servers>


$xmlUrl = "https://configurationsite/server_names.xml"  # Replace with actual URL

$xmlContent = Invoke-WebRequest -Uri $xmlUrl

if ($xmlContent.StatusCode -eq 200) {
    # Parse XML content
    $xml = [xml]$xmlContent.Content

    # Get local hostname
    $localHostname = [System.Net.Dns]::GetHostName()

    # Find matching environment based on hostname
    $matchingEnv = $xml.servers.environment | Where-Object { $_.server | Where-Object { $_ -eq $localHostname } }

    if ($matchingEnv) {
        # Identify the other server in the matching environment
        $remoteServer = $matchingEnv.server | Where-Object { $_ -ne $localHostname }

        if ($remoteServer) {
            Write-Host "Remote server for deployment: $remoteServer"
        } else {
            Write-Warning "Local server not found in any environment!"
        }
    } else {
        Write-Warning "No matching environment found for hostname: $localHostname"
    }
} else {
    Write-Error "Failed to retrieve XML content. Status code: $($xmlContent.StatusCode)"
}

function Get-RemoteServer {
    param(
        [Parameter(Mandatory = $true)]
        [string] $env,
        [Parameter(Mandatory = $true)]
        [string] $xmlUrl
    )

    $xmlContent = Invoke-WebRequest -Uri $xmlUrl

    if ($xmlContent.StatusCode -eq 200) {
        # Parse XML content
        $xml = [xml]$xmlContent.Content

        # Get local hostname
        $localHostname = [System.Net.Dns]::GetHostName()

        # Find matching environment
        $matchingEnv = $xml.servers.environment | Where-Object { $_.name -eq $env }

        if ($matchingEnv) {
            # Identify the other server in the matching environment
            $remoteServer = $matchingEnv.server | Where-Object { $_ -ne $localHostname }

            if ($remoteServer) {
                Write-Host "Remote server for deployment: $remoteServer"
                return $remoteServer
            } else {
                Write-Warning "Local server not found in environment: $env"
            }
        } else {
            Write-Warning "Environment '$env' not found in XML file."
        }
    } else {
        Write-Error "Failed to retrieve XML content. Status code: $($xmlContent.StatusCode)"
    }

    return $null  # Indicate no valid server found
}

# Example usage:
$env = "DEV"
$xmlUrl = "https://configurationsite/server_names.xml"  # Replace with actual URL
$remoteServer = Get-RemoteServer -env $env -xmlUrl $xmlUrl

if ($remoteServer) {
    Write-Host "Deploying to: $remoteServer"
} else {
    Write-Warning "No valid remote server found."
}

